var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
hosts["fstream365"] = function (url, movieInfo, provider, config, callback) { return __awaiter(_this, void 0, void 0, function () {
    function f2(p) { }
    function f3(p2, p3) {
        var v = 0;
        for (var v2 = p3 + 4 - 1; v2 > p3 - 1; v2--) {
            v = v << 8 | p2[v2];
        }
        return v >>> 0;
    }
    function f4(p4, p5, p6) {
        for (var v3 = 3; v3 > -1; v3--) {
            var v4 = p5 >>> v3 * 8;
            p5 = p5 ^ v4 << v3 * 8;
            p4[p6 + v3] = v4;
        }
        return p4;
    }
    function f5(p7, p8, p9) {
        for (var v5 = 3; v5 > -1; v5--) {
            var v6 = p8 >>> v5 * 8;
            p8 = p8 ^ v6 << v5 * 8;
            p7[p9 + (3 - v5)] = v6;
        }
        return p7;
    }
    function f6(p10, p11) {
        var v7 = p10 << p11 | p10 >>> 32 - p11;
        return v7 >>> 0;
    }
    function f7(p12, p13, p14, p15) {
        var vF3 = f3(p14, 8);
        var vF32 = f3(p15, 0);
        f4(p12, vF32, 8);
        f4(p12, vF3, 0);
        vF32 = f3(p12, 12);
        var vF33 = f3(p14, 12);
        vF32 = vF32 ^ vF33;
        f4(p13, vF32, 12);
        vF32 = f3(p12, 8);
        vF33 = f3(p14, 8);
        vF32 = vF32 ^ vF33;
        f4(p13, vF32, 8);
        vF32 = f3(p12, 4);
        vF33 = f3(p14, 4);
        vF32 = vF32 ^ vF33;
        f4(p13, vF32, 4);
        vF32 = f3(p12, 0);
        vF33 = f3(p14, 0);
        vF32 = vF32 ^ vF33;
        f4(p13, vF32, 0);
    }
    function f8(p16, p17, p18) {
        var vF34 = f3(p18, 12);
        var vF35 = f3(p17, 12);
        f4(p16, vF34 + vF35, 12);
        var vF34 = f3(p18, 8);
        var vF35 = f3(p17, 8);
        f4(p16, vF34 + vF35, 8);
        var vF34 = f3(p18, 4);
        var vF35 = f3(p17, 4);
        f4(p16, vF34 + vF35, 4);
        var vF34 = f3(p18, 0);
        var vF35 = f3(p17, 0);
        f4(p16, vF34 + vF35, 0);
    }
    function f9(p19, p20, p21, p22, p23) {
        if (p23 == 0) {
            var v8 = [153, 121, 130, 90, 153, 121, 130, 90, 153, 121, 130, 90, 153, 121, 130, 90];
            f8(p19, p22, v8);
            var vF36 = f3(p19, 0);
            p23 = f3(p21, 0);
            vF36 = f6(p23, 5) + vF36;
            var vF37 = f3(p21, 4);
            var vF38 = f3(p21, 12);
            var vF39 = f3(p21, 8);
            var v9 = ((vF38 ^ vF39) & vF37 ^ vF38) + vF36;
            var vF6 = f6(v9, 30);
            f2(vF36 + " " + vF37 + " " + vF38 + " " + vF39 + " " + v9 + " " + vF6);
            f4(p20, vF6, 12);
            vF36 = f3(p19, 4);
            vF37 = f6(vF37, 30);
            vF36 = ((vF39 ^ vF37) & p23 ^ vF39) + vF38 + vF36;
            vF38 = f6(v9, 5) + vF36;
            vF36 = f6(vF38, 30);
            f4(p20, vF36, 8);
            vF36 = f3(p19, 8);
            vF36 = vF39 + vF36;
            vF39 = f6(p23, 30);
            vF36 = ((vF39 ^ vF37) & v9 ^ vF37) + vF36;
            p23 = f6(vF38, 5) + vF36;
            f4(p20, p23, 4);
            vF36 = f3(p19, 12);
            vF36 = vF36 + vF37;
            vF36 = ((vF39 ^ vF6) & vF38 ^ vF39) + vF36;
            vF36 = f6(p23, 5) + vF36;
            f4(p20, vF36, 0);
        }
        else if (p23 == 1) {
            var v10 = [161, 235, 217, 110, 161, 235, 217, 110, 161, 235, 217, 110, 161, 235, 217, 110];
            f8(p19, p22, v10);
            var vF310 = f3(p19, 0);
            var v9 = f3(p21, 12);
            var vF37 = f3(p21, 8);
            var vF38 = f3(p21, 4);
            var v11 = vF38 ^ vF37 ^ v9;
            vF39 = f3(p21, 0);
            p23 = f6(vF39, 5) + v11 + vF310;
            var vF6 = f6(p23, 30);
            f4(p20, vF6, 12);
            vF310 = f3(p19, 4);
            vF38 = f6(vF38, 30);
            vF310 = (vF38 ^ vF39 ^ vF37) + v9 + vF310;
            v9 = f6(p23, 5) + vF310;
            vF310 = f6(v9, 30);
            f4(p20, vF310, 8);
            vF310 = f3(p19, 8);
            vF310 = vF310 + vF37;
            vF39 = f6(vF39, 30);
            vF310 = (vF39 ^ vF38 ^ p23) + vF310;
            vF37 = f6(v9, 5) + vF310;
            f4(p20, vF37, 4);
            vF310 = f3(p19, 12);
            vF310 = vF310 + vF38;
            vF310 = (vF39 ^ vF6 ^ v9) + vF310;
            vF310 = f6(vF37, 5) + vF310;
            f4(p20, vF310, 0);
        }
        else if (p23 == 2) {
            var v12 = [220, 188, 27, 143, 220, 188, 27, 143, 220, 188, 27, 143, 220, 188, 27, 143];
            f8(p19, p22, v12);
            var vF310 = f3(p19, 0);
            var p23 = f3(p21, 0);
            vF310 = f6(p23, 5) + vF310;
            var vF37 = f3(p21, 4);
            var vF38 = f3(p21, 12);
            var vF39 = f3(p21, 8);
            var v11 = (vF39 ^ vF38) & vF37;
            var v9 = (vF38 & vF39 ^ v11) + vF310;
            var vF6 = f6(v9, 30);
            f4(p20, vF6, 12);
            vF310 = f3(p19, 4);
            vF37 = f6(vF37, 30);
            vF310 = ((vF37 ^ vF39) & p23 ^ vF37 & vF39) + vF38 + vF310;
            vF38 = f6(v9, 5) + vF310;
            vF310 = f6(vF38, 30);
            f4(p20, vF310, 8);
            vF310 = f3(p19, 8);
            vF310 = vF39 + vF310;
            vF39 = f6(p23, 30);
            vF310 = ((vF39 ^ vF37) & v9 ^ vF37 & vF39) + vF310;
            p23 = f6(vF38, 5) + vF310;
            f4(p20, p23, 4);
            vF310 = f3(p19, 12);
            vF310 = vF37 + vF310;
            vF310 = ((vF6 ^ vF39) & vF38 ^ vF6 & vF39) + vF310;
            vF310 = f6(p23, 5) + vF310;
            f4(p20, vF310, 0);
        }
        else if (p23 == 3) {
            var v13 = [214, 193, 98, 202, 214, 193, 98, 202, 214, 193, 98, 202, 214, 193, 98, 202];
            f8(p19, p22, v13);
            var vF310 = f3(p19, 0);
            var v9 = f3(p21, 12);
            var vF37 = f3(p21, 8);
            var vF38 = f3(p21, 4);
            var v11 = vF38 ^ vF37 ^ v9;
            vF39 = f3(p21, 0);
            p23 = f6(vF39, 5) + v11 + vF310;
            var vF6 = f6(p23, 30);
            f4(p20, vF6, 12);
            vF310 = f3(p19, 4);
            vF38 = f6(vF38, 30);
            vF310 = (vF38 ^ vF39 ^ vF37) + v9 + vF310;
            v9 = f6(p23, 5) + vF310;
            vF310 = f6(v9, 30);
            f4(p20, vF310, 8);
            vF310 = f3(p19, 8);
            vF310 = vF310 + vF37;
            vF39 = f6(vF39, 30);
            vF310 = (vF39 ^ vF38 ^ p23) + vF310;
            vF37 = f6(v9, 5) + vF310;
            f4(p20, vF37, 4);
            vF310 = f3(p19, 12);
            vF310 = vF310 + vF38;
            vF310 = (vF39 ^ vF6 ^ v9) + vF310;
            vF310 = f6(vF37, 5) + vF310;
            f4(p20, vF310, 0);
        }
    }
    function f10(p24, p25, p26) {
        var v14 = 7;
        var v15 = 12;
        var v16 = 0;
        var v17 = 32;
        var v18 = [1, 2, 3, 4, 5, 6, 7];
        var v19 = [];
        for (var v20 = 0; v20 < p26.length; v20++) {
            var v21 = p26.charCodeAt(v20);
            if (v21 > 127) {
                break;
            }
            v19[v20] = v21;
        }
        var v22 = [];
        for (var v23 = 0; v23 < p24.length; v23++) {
            var v21 = p24.charCodeAt(v23);
            if (v21 > 127) {
                break;
            }
            v22[v23] = v21;
        }
        var v24 = [];
        var v25 = -1;
        while (v14 != v16) {
            v25++;
            var2 = v18[v25];
            var v26 = v22[v16 % v15];
            var v27 = v19[v16 % v15];
            v27 ^= var2;
            v27 ^= v26;
            v24[v16] = v27;
            v16++;
        }
        v24[v16] = 128;
        var v28 = [1, 35, 69, 103, 137, 171, 205, 239, 254, 220, 186, 152, 118, 84, 50, 16, 240, 225, 210, 195, 61];
        var v29 = [1, 35, 69, 103, 137, 171, 205, 239, 254, 220, 186, 152, 118, 84, 50, 16, 240, 225, 210, 195, 61];
        var v30 = new Array(16);
        var v14 = 0;
        var v31 = new Array(64);
        while (v14 != 64) {
            if (v14 == 64) { }
            else {
                v16 = f3(v24, v14);
                var v26 = v16 << 24;
                v26 = v26 | (v16 & 65280) << 8;
                v26 = v26 | (v16 >>> 8 & 65280 | v16 >>> 24);
                f4(v31, v26, v14);
                v14 += 4;
            }
        }
        f2(v31);
        var v14 = 0;
        var v16 = 0;
        var v32 = 0;
        var v33 = 0;
        var v34 = 0;
        var v35 = 0;
        var v36 = 0;
        var v37 = 0;
        var v38 = 0;
        var v39 = 0;
        var v40 = 0;
        var v41 = 0;
        var v42 = new Array(200);
        var v17 = f3(v28, 0);
        var vF311 = f3(v28, 4);
        var vF312 = f3(v31, 0);
        var vF313 = f3(v31, 4);
        var vF314 = f3(v31, 8);
        var vF315 = f3(v31, 12);
        var v26 = f3(v28, 12);
        f4(v42, v26, 108);
        f4(v42, vF311, 100);
        f4(v42, v17, 96);
        f4(v42, vF315, 124);
        f4(v42, vF314, 120);
        f4(v42, vF313, 116);
        v26 = f3(v28, 16);
        f4(v42, v26 + vF312, 112);
        var v43 = v42.slice(112, 128);
        var v44 = new Array(16);
        f9(v44, v30, v29, v43, 0);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        v41 = f3(v42, 16);
        v33 = f3(v42, 20);
        v34 = f3(v42, 24);
        v37 = f3(v42, 28);
        f4(v42, v37, 124);
        f4(v42, v34, 120);
        f4(v42, v33, 116);
        f4(v42, f6(v17, 30) + v41, 112);
        v43 = v42.slice(112, 128);
        f2("array1048000");
        f2(v30);
        f2("array1048032");
        f2(v29);
        f2("array1048048");
        f2(v43);
        f9(v44, v29, v30, v43, 0);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        v16 = f3(v42, 32);
        v35 = f3(v42, 36);
        v36 = f3(v42, 40);
        v32 = f3(v42, 44);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        f4(v42, v32, 124);
        f4(v42, v36, 120);
        f4(v42, v35, 116);
        v26 = f3(v42, 64);
        f4(v42, f6(v26, 30) + v16, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 0);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        v39 = f3(v42, 48);
        v17 = f3(v42, 52);
        v14 = f3(v42, 56);
        v40 = 56;
        f4(v42, v40, 124);
        f4(v42, v14, 120);
        f4(v42, v17, 116);
        f4(v42, f6(v38, 30) + 0, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 0);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        var vF316 = f3(v42, 108);
        f4(v42, 0, 108);
        f4(v42, 0, 104);
        f4(v42, vF313, 100);
        f4(v42, vF312, 96);
        f4(v42, 0, 124);
        f4(v42, 0, 120);
        f4(v42, 0, 116);
        f4(v42, 0, 112);
        v43 = v42.slice(112, 128);
        var v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        vF315 = f3(v42, 84);
        vF314 = f3(v42, 88);
        vF312 = f3(v42, 80);
        vF313 = f3(v42, 92);
        f4(v42, vF316, 108);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        v26 = vF312 ^ v16 ^ v17;
        vF312 = f6(v26, 1);
        v26 = vF312 ^ v32 ^ vF313;
        vF313 = f6(v26, 1);
        f4(v42, vF313, 124);
        v26 = v40 ^ vF314 ^ v36;
        vF314 = f6(v26, 1);
        f4(v42, vF314, 120);
        v26 = v14 ^ vF315 ^ v35;
        vF315 = f6(v26, 1);
        f4(v42, vF315, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30);
        v26 = v26 + vF312;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 0);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v37, 108);
        f4(v42, v34, 104);
        f4(v42, v33, 100);
        f4(v42, v41, 96);
        f4(v42, v32, 124);
        f4(v42, v36, 120);
        f4(v42, v35, 116);
        f4(v42, v16, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v37 = f3(v42, 92);
        v34 = f3(v42, 80);
        v33 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = v26 ^ v14 ^ vF313;
        v41 = f6(v26, 1);
        f4(v42, v41, 120);
        v26 = v17 ^ v33 ^ vF314;
        v33 = f6(v26, 1);
        f4(v42, v33, 116);
        v26 = v34 ^ v39 ^ vF315;
        v34 = f6(v26, 1);
        v26 = f6(v38, 30);
        v26 = v26 + v34;
        f4(v42, v26, 112);
        v26 = v37 ^ v40 ^ v34;
        v37 = f6(v26, 1);
        f4(v42, v37, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 1);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        vF316 = f3(v42, 108);
        f4(v42, v32, 108);
        f4(v42, v36, 104);
        f4(v42, v35, 100);
        f4(v42, v16, 96);
        f4(v42, v40, 124);
        f4(v42, v14, 120);
        f4(v42, v17, 116);
        f4(v42, v39, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v32 = f3(v42, 84);
        v36 = f3(v42, 88);
        v16 = f3(v42, 80);
        v35 = f3(v42, 92);
        f4(v42, vF316, 108);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        v26 = v33 ^ vF312 ^ v16;
        v16 = f6(v26, 1);
        v26 = vF313 ^ v35 ^ v16;
        v35 = f6(v26, 1);
        f4(v42, v35, 124);
        v26 = v37 ^ v36 ^ vF314;
        v36 = f6(v26, 1);
        f4(v42, v36, 120);
        v26 = v41 ^ vF315 ^ v32;
        v32 = f6(v26, 1);
        f4(v42, v32, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + v16;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 1);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v40, 108);
        f4(v42, v14, 104);
        f4(v42, v17, 100);
        f4(v42, v39, 96);
        f4(v42, vF313, 124);
        f4(v42, vF314, 120);
        f4(v42, vF315, 116);
        f4(v42, vF312, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v40 = f3(v42, 92);
        v39 = f3(v42, 80);
        v14 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = v41 ^ v26 ^ v35;
        v17 = f6(v26, 1);
        f4(v42, v17, 120);
        v26 = v14 ^ v33 ^ v36;
        v14 = f6(v26, 1);
        f4(v42, v14, 116);
        v26 = v34 ^ v39 ^ v32;
        v39 = f6(v26, 1);
        v26 = f6(v38, 30) + v39;
        f4(v42, v26, 112);
        v26 = v39 ^ v40 ^ v37;
        v40 = f6(v26, 1);
        f4(v42, v40, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 1);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        vF316 = f3(v42, 108);
        f4(v42, vF313, 108);
        f4(v42, vF314, 104);
        f4(v42, vF315, 100);
        f4(v42, vF312, 96);
        f4(v42, v37, 124);
        f4(v42, v41, 120);
        f4(v42, v33, 116);
        f4(v42, v34, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        vF315 = f3(v42, 84);
        vF314 = f3(v42, 88);
        vF312 = f3(v42, 80);
        vF313 = f3(v42, 92);
        f4(v42, vF316, 108);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        v26 = v14 ^ vF312 ^ v16;
        vF312 = f6(v26, 1);
        v26 = v35 ^ vF313 ^ vF312;
        vF313 = f6(v26, 1);
        f4(v42, vF313, 124);
        v26 = v40 ^ v36 ^ vF314;
        vF314 = f6(v26, 1);
        f4(v42, vF314, 120);
        v26 = v17 ^ vF315 ^ v32;
        vF315 = f6(v26, 1);
        f4(v42, vF315, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + vF312;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 1);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v37, 108);
        f4(v42, v41, 104);
        f4(v42, v33, 100);
        f4(v42, v34, 96);
        f4(v42, v35, 124);
        f4(v42, v36, 120);
        f4(v42, v32, 116);
        f4(v42, v16, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v37 = f3(v42, 92);
        v34 = f3(v42, 80);
        v33 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = vF313 ^ v26 ^ v17;
        v41 = f6(v26, 1);
        f4(v42, v41, 120);
        v26 = vF314 ^ v33 ^ v14;
        v33 = f6(v26, 1);
        f4(v42, v33, 116);
        v26 = vF315 ^ v39 ^ v34;
        v34 = f6(v26, 1);
        v26 = f6(v38, 30) + v34;
        f4(v42, v26, 112);
        v26 = v34 ^ v40 ^ v37;
        v37 = f6(v26, 1);
        f4(v42, v37, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 1);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        vF316 = f3(v42, 108);
        f4(v42, v35, 108);
        f4(v42, v36, 104);
        f4(v42, v32, 100);
        f4(v42, v16, 96);
        f4(v42, v40, 124);
        f4(v42, v17, 120);
        f4(v42, v14, 116);
        f4(v42, v39, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v32 = f3(v42, 84);
        v36 = f3(v42, 88);
        v16 = f3(v42, 80);
        v35 = f3(v42, 92);
        f4(v42, vF316, 108);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        v26 = v33 ^ vF312 ^ v16;
        v16 = f6(v26, 1);
        v26 = v35 ^ vF313 ^ v16;
        v35 = f6(v26, 1);
        f4(v42, v35, 124);
        v26 = v37 ^ v36 ^ vF314;
        v36 = f6(v26, 1);
        f4(v42, v36, 120);
        v26 = v41 ^ vF315 ^ v32;
        v32 = f6(v26, 1);
        f4(v42, v32, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + v16;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 2);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v40, 108);
        f4(v42, v17, 104);
        f4(v42, v14, 100);
        f4(v42, v39, 96);
        f4(v42, vF313, 124);
        f4(v42, vF314, 120);
        f4(v42, vF315, 116);
        f4(v42, vF312, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v40 = f3(v42, 92);
        v39 = f3(v42, 80);
        v14 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = v35 ^ v26 ^ v41;
        v17 = f6(v26, 1);
        f4(v42, v17, 120);
        v26 = v36 ^ v33 ^ v14;
        v14 = f6(v26, 1);
        f4(v42, v14, 116);
        v26 = v32 ^ v39 ^ v34;
        v39 = f6(v26, 1);
        v26 = f6(v38, 30) + v39;
        f4(v42, v26, 112);
        v26 = v39 ^ v40 ^ v37;
        v40 = f6(v26, 1);
        f4(v42, v40, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 2);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        vF316 = f3(v42, 108);
        f4(v42, vF313, 108);
        f4(v42, vF314, 104);
        f4(v42, vF315, 100);
        f4(v42, vF312, 96);
        f4(v42, v37, 124);
        f4(v42, v41, 120);
        f4(v42, v33, 116);
        f4(v42, v34, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        vF315 = f3(v42, 84);
        vF314 = f3(v42, 88);
        vF312 = f3(v42, 80);
        vF313 = f3(v42, 92);
        f4(v42, vF316, 108);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        v26 = v14 ^ vF312 ^ v16;
        vF312 = f6(v26, 1);
        v26 = v35 ^ vF313 ^ vF312;
        vF313 = f6(v26, 1);
        f4(v42, vF313, 124);
        v26 = v40 ^ v36 ^ vF314;
        vF314 = f6(v26, 1);
        f4(v42, vF314, 120);
        v26 = v17 ^ vF315 ^ v32;
        vF315 = f6(v26, 1);
        f4(v42, vF315, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + vF312;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 2);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v37, 108);
        f4(v42, v41, 104);
        f4(v42, v33, 100);
        f4(v42, v34, 96);
        f4(v42, v35, 124);
        f4(v42, v36, 120);
        f4(v42, v32, 116);
        f4(v42, v16, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v37 = f3(v42, 92);
        v34 = f3(v42, 80);
        v33 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = vF313 ^ v26 ^ v17;
        v41 = f6(v26, 1);
        f4(v42, v41, 120);
        v26 = vF314 ^ v33 ^ v14;
        v33 = f6(v26, 1);
        f4(v42, v33, 116);
        v26 = vF315 ^ v39 ^ v34;
        v34 = f6(v26, 1);
        v26 = f6(v38, 30) + v34;
        f4(v42, v26, 112);
        v26 = v34 ^ v40 ^ v37;
        v37 = f6(v26, 1);
        f4(v42, v37, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 2);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF311 = f3(v42, 100);
        vF316 = f3(v42, 108);
        f4(v42, v35, 108);
        f4(v42, v36, 104);
        f4(v42, v32, 100);
        f4(v42, v16, 96);
        f4(v42, v40, 124);
        f4(v42, v17, 120);
        f4(v42, v14, 116);
        f4(v42, v39, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v32 = f3(v42, 84);
        v36 = f3(v42, 88);
        v16 = f3(v42, 80);
        v35 = f3(v42, 92);
        f4(v42, vF316, 108);
        f4(v42, vF311, 100);
        f4(v42, v38, 96);
        v26 = v33 ^ vF312 ^ v16;
        v16 = f6(v26, 1);
        v26 = v35 ^ vF313 ^ v16;
        v35 = f6(v26, 1);
        f4(v42, v35, 124);
        v26 = v37 ^ v36 ^ vF314;
        v36 = f6(v26, 1);
        f4(v42, v36, 120);
        v26 = v41 ^ vF315 ^ v32;
        v32 = f6(v26, 1);
        f4(v42, v32, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + v16;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 2);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v40, 108);
        f4(v42, v17, 104);
        f4(v42, v14, 100);
        f4(v42, v39, 96);
        f4(v42, vF313, 124);
        f4(v42, vF314, 120);
        f4(v42, vF315, 116);
        f4(v42, vF312, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v40 = f3(v42, 92);
        v39 = f3(v42, 80);
        v14 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = v35 ^ v26 ^ v41;
        v17 = f6(v26, 1);
        f4(v42, v17, 120);
        v26 = v36 ^ v33 ^ v14;
        v14 = f6(v26, 1);
        f4(v42, v14, 116);
        v26 = v32 ^ v39 ^ v34;
        v39 = f6(v26, 1);
        v26 = f6(v38, 30) + v39;
        f4(v42, v26, 112);
        v26 = v39 ^ v40 ^ v37;
        v40 = f6(v26, 1);
        f4(v42, v40, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 3);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF316 = f3(v42, 100);
        var24 = f3(v42, 104);
        var25 = f3(v42, 108);
        f4(v42, vF313, 108);
        f4(v42, vF314, 104);
        f4(v42, vF315, 100);
        f4(v42, vF312, 96);
        f4(v42, v37, 124);
        f4(v42, v41, 120);
        f4(v42, v33, 116);
        f4(v42, v34, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        vF315 = f3(v42, 84);
        vF314 = f3(v42, 88);
        vF312 = f3(v42, 80);
        vF313 = f3(v42, 92);
        f4(v42, var25, 108);
        f4(v42, var24, 104);
        f4(v42, vF316, 100);
        f4(v42, v38, 96);
        v26 = v14 ^ vF312 ^ v16;
        vF312 = f6(v26, 1);
        v26 = v35 ^ vF313 ^ vF312;
        vF313 = f6(v26, 1);
        f4(v42, vF313, 124);
        v26 = v40 ^ v36 ^ vF314;
        vF314 = f6(v26, 1);
        f4(v42, vF314, 120);
        v26 = v17 ^ vF315 ^ v32;
        vF315 = f6(v26, 1);
        f4(v42, vF315, 116);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + vF312;
        f4(v42, v26, 112);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 3);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v37, 108);
        f4(v42, v41, 104);
        f4(v42, v33, 100);
        f4(v42, v34, 96);
        f4(v42, v35, 124);
        f4(v42, v36, 120);
        f4(v42, v32, 116);
        f4(v42, v16, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v37 = f3(v42, 84);
        v34 = f3(v42, 88);
        v33 = f3(v42, 92);
        v26 = f3(v42, 80);
        v26 = vF315 ^ v26 ^ v39;
        v41 = f6(v26, 1);
        v26 = f6(v38, 30) + v41;
        f4(v42, v26, 112);
        v26 = v41 ^ v40 ^ v33;
        v33 = f6(v26, 1);
        f4(v42, v33, 124);
        v26 = vF313 ^ v34 ^ v17;
        v34 = f6(v26, 1);
        f4(v42, v34, 120);
        v26 = vF314 ^ v37 ^ v14;
        v37 = f6(v26, 1);
        f4(v42, v37, 116);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 3);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v38 = f3(v42, 96);
        vF316 = f3(v42, 100);
        var24 = f3(v42, 104);
        var25 = f3(v42, 108);
        f4(v42, v35, 108);
        f4(v42, v36, 104);
        f4(v42, v32, 100);
        f4(v42, v16, 96);
        f4(v42, v40, 124);
        f4(v42, v17, 120);
        f4(v42, v14, 116);
        f4(v42, v39, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v16 = f3(v42, 88);
        v35 = f3(v42, 84);
        v36 = f3(v42, 92);
        v32 = f3(v42, 80);
        f4(v42, var25, 108);
        f4(v42, var24, 104);
        f4(v42, vF316, 100);
        f4(v42, v38, 96);
        v26 = v37 ^ vF312 ^ v32;
        v32 = f6(v26, 1);
        v26 = f3(v42, 64);
        v26 = f6(v26, 30) + v32;
        f4(v42, v26, 112);
        v26 = v32 ^ v36 ^ vF313;
        v36 = f6(v26, 1);
        f4(v42, v36, 124);
        v26 = v34 ^ v35 ^ vF315;
        v35 = f6(v26, 1);
        f4(v42, v35, 116);
        v26 = v33 ^ vF314 ^ v16;
        v16 = f6(v26, 1);
        f4(v42, v16, 120);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v30, v29, v43, 3);
        v26 = f3(v30, 0);
        f4(v42, v26, 64);
        v26 = f3(v30, 4);
        f4(v42, v26, 68);
        v26 = f3(v30, 8);
        f4(v42, v26, 72);
        v26 = f3(v30, 12);
        f4(v42, v26, 76);
        f4(v42, v40, 108);
        f4(v42, v17, 104);
        f4(v42, v14, 100);
        f4(v42, v39, 96);
        f4(v42, vF313, 124);
        f4(v42, vF314, 120);
        f4(v42, vF315, 116);
        f4(v42, vF312, 112);
        v43 = v42.slice(112, 128);
        v45 = v42.slice(80, 96);
        v29 = v42.slice(96, 112);
        f7(v44, v45, v29, v43);
        v26 = f3(v45, 0);
        f4(v42, v26, 80);
        v26 = f3(v45, 4);
        f4(v42, v26, 84);
        v26 = f3(v45, 8);
        f4(v42, v26, 88);
        v26 = f3(v45, 12);
        f4(v42, v26, 92);
        v17 = f3(v42, 92);
        v14 = f3(v42, 80);
        v32 = f3(v42, 84);
        v26 = f3(v42, 88);
        v26 = v36 ^ v26 ^ v34;
        v26 = f6(v26, 1);
        f4(v42, v26, 120);
        v26 = v16 ^ v37 ^ v32;
        v26 = f6(v26, 1);
        f4(v42, v26, 116);
        v26 = v35 ^ v41 ^ v14;
        v14 = f6(v26, 1);
        v26 = f6(v38, 30) + v14;
        f4(v42, v26, 112);
        v26 = v14 ^ v33 ^ v17;
        v26 = f6(v26, 1);
        f4(v42, v26, 124);
        v43 = v42.slice(112, 128);
        v29 = v42.slice(96, 112);
        f9(v44, v29, v30, v43, 3);
        v26 = f3(v29, 0);
        f4(v42, v26, 96);
        v26 = f3(v29, 4);
        f4(v42, v26, 100);
        v26 = f3(v29, 8);
        f4(v42, v26, 104);
        v26 = f3(v29, 12);
        f4(v42, v26, 108);
        v17 = f3(v42, 108);
        v14 = f3(v42, 104);
        v16 = f3(v42, 100);
        v26 = f3(v28, 0);
        v27 = f3(v42, 96);
        f4(v28, v26 + v27, 0);
        v26 = f3(v28, 4);
        f4(v28, v26 + v16, 4);
        v26 = f3(v28, 8);
        f4(v28, v26 + v14, 8);
        v26 = f3(v28, 12);
        f4(v28, v26 + v17, 12);
        v26 = f3(v28, 16);
        v27 = f3(v42, 64);
        v26 = f6(v27, 30) + v26;
        f4(v28, v26, 16);
        vF313 = f3(v28, 0);
        f5(v28, vF313, 0);
        v15 = f3(v28, 4);
        f5(v28, v15, 4);
        var4 = f3(v28, 8);
        f5(v28, var4, 8);
        v14 = f3(v28, 12);
        f5(v28, v14, 12);
        v17 = f3(v28, 16);
        f5(v28, v17, 16);
        f2("array1048096");
        f2(v28);
        function f11(p27) {
            return [(p27 & 4278190080) >> 24, (p27 & 16711680) >> 16, (p27 & 65280) >> 8, p27 & 255];
        }
        r = function (p28, p29) {
            try {
                for (var v46 = 0; v46 < p28.length; v46++) {
                    p28[v46] = p28[v46] ^ p29[v46 % p29.length];
                }
            }
            catch (_0x424542) {
                return null;
            }
        };
        var v47 = v28.slice(4, 20);
        var v48 = new Uint8Array(v47);
        mG = v48;
        f2(mG);
        mG = libs.string_btoa(String.fromCharCode.apply(null, new Uint8Array(mG)));
        return mG;
    }
    function _0x1fe5e1(_0x357637, _0x35e041, _0x14c179, _0x37e7dd) {
        var _0x34bf15 = f10(_0x35e041, _0x14c179, _0x37e7dd);
        _0x357637 = libs.string_atob(_0x357637);
        var _0x3f465b = {
            format: CryptoJSAesJson
        };
        var _0x83ff06 = cryptoS.AES.decrypt(_0x357637, _0x34bf15, _0x3f465b);
        return JSON.parse(JSON.parse(_0x83ff06.toString(cryptoS.enc.Utf8)));
    }
    var DOMAIN, HOST, headers, CryptoJSAesJson, _0x20e478, headers_1, parseDetail, textDetail, id, hash, mid, f, encrypted, headerAPI, urlDirect, dataDirect, parseDirect, parseSource, _i, parseSource_1, item, e_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                DOMAIN = 'https://fstream365.com';
                HOST = 'fstream365';
                headers = {
                    'content-type': 'application/json;charset=UTF-8',
                    'Referer': config.options.link_detail,
                };
                _a.label = 1;
            case 1:
                _a.trys.push([1, 6, , 7]);
                CryptoJSAesJson = {
                    'stringify': function (_0x2446ec) {
                        var _0x168df0 = {
                            'ct': _0x2446ec["ciphertext"]["toString"](cryptoS["enc"]["Base64"])
                        };
                        if (_0x2446ec.iv) {
                            _0x168df0.iv = _0x2446ec.iv["toString"]();
                        }
                        if (_0x2446ec["salt"]) {
                            _0x168df0.s = _0x2446ec["salt"]["toString"]();
                        }
                        return JSON["stringify"](_0x168df0);
                    },
                    'parse': function (_0x50e8b5) {
                        var _a;
                        var _0x2ff517 = (_a = {},
                            _a["oPPMn"] = "3|1|0|2|4",
                            _a);
                        var _0x16be06 = _0x2ff517["oPPMn"]["split"]('|');
                        var _0x2c7ffe = 0;
                        while (true) {
                            switch (_0x16be06[_0x2c7ffe++]) {
                                case '0':
                                    if (_0x41868a.iv) {
                                        _0x4032ce.iv = cryptoS["enc"]["Hex"]["parse"](_0x41868a.iv);
                                    }
                                    continue;
                                case '1':
                                    var _0x4032ce = cryptoS["lib"]["CipherParams"]["create"]({
                                        'ciphertext': cryptoS["enc"]["Base64"]["parse"](_0x41868a.ct)
                                    });
                                    continue;
                                case '2':
                                    if (_0x41868a.s) {
                                        _0x4032ce["salt"] = cryptoS["enc"]["Hex"]["parse"](_0x41868a.s);
                                    }
                                    continue;
                                case '3':
                                    var _0x41868a = JSON["parse"](_0x50e8b5);
                                    continue;
                                case '4':
                                    return _0x4032ce;
                            }
                            break;
                        }
                    }
                };
                _0x20e478 = function (_0x597fed) {
                    var _0x28942b = "";
                    for (var _0x582d43 = 0; _0x582d43 < _0x597fed.length; _0x582d43++) {
                        _0x28942b += "" + _0x597fed.charCodeAt(_0x582d43).toString(16);
                    }
                    return _0x28942b;
                };
                ;
                headers_1 = {
                    "Referer": "https://ww.ymovies.vip/",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"
                };
                return [4, fetch(url, {
                        headers: headers_1
                    })];
            case 2:
                parseDetail = _a.sent();
                return [4, parseDetail.text()];
            case 3:
                textDetail = _a.sent();
                id = textDetail.match(/\"id\" *\: *\"([^\"]+)/i);
                id = id ? id[1] : "";
                hash = textDetail.match(/\"hash\" *\: *\"([^\"]+)/i);
                hash = hash ? hash[1] : "";
                mid = textDetail.match(/\"mid\" *\: *\"([^\"]+)/i);
                mid = mid ? mid[1] : "";
                libs.log({ id: id, hash: hash, mid: mid }, HOST, "TOKEN ID");
                if (!id || !mid || !hash) {
                    return [2];
                }
                f = {
                    format: CryptoJSAesJson
                };
                encrypted = JSON.parse(cryptoS.AES.encrypt(JSON.stringify(id + "/" + "movie" + "?srv=1"), hash, f).toString());
                libs.log({ encrypted: encrypted }, HOST, 'ENCRYPT');
                if (!encrypted) {
                    return [2];
                }
                headerAPI = {
                    "Referer": DOMAIN,
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36"
                };
                urlDirect = "".concat(DOMAIN, "/ajax/getSources/?id=").concat(_0x20e478(encrypted.ct), "&h=").concat(_0x20e478(hash), "&a=").concat(encrypted.iv, "&t=").concat(encrypted.s);
                return [4, fetch(urlDirect, {
                        headers: headerAPI,
                        method: "GET"
                    })];
            case 4:
                dataDirect = _a.sent();
                return [4, dataDirect.json()];
            case 5:
                parseDirect = _a.sent();
                libs.log({ parseDirect: parseDirect, urlDirect: urlDirect, url: url }, HOST, 'PARSE parseDirect');
                parseSource = _0x1fe5e1(parseDirect.sources, encrypted.iv, 0, encrypted.s);
                libs.log({ parseSource: parseSource }, HOST, 'DECRYPT');
                libs.log({ parseSource: parseSource }, HOST, 'PARSE parseSource');
                for (_i = 0, parseSource_1 = parseSource; _i < parseSource_1.length; _i++) {
                    item = parseSource_1[_i];
                    libs.log({ file: item.file }, HOST, "FILE");
                    if (!item.file) {
                        continue;
                    }
                    libs.embed_callback(item.file, provider, HOST, 'Hls', callback, 1, [], [{ file: item.file, quality: 1080 }], headerAPI);
                }
                return [3, 7];
            case 6:
                e_1 = _a.sent();
                libs.log({ e: e_1 }, HOST, 'ERROR');
                return [3, 7];
            case 7: return [2];
        }
    });
}); };
